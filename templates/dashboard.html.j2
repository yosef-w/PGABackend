<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>PGA Parking Dashboard</title>
  <!-- Bootstrap CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Chart.js CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-light">
  <div class="container mt-5">
    <h1 class="mb-4">PGA Parking Dashboard</h1>

    <button class="btn btn-primary mb-3" onclick="location.reload()">Refresh</button>

    {% for garage in data %}
      <div class="card mb-4">
        <div class="card-header">
          <h2 class="h5">{{ garage.garage_name }}</h2>
        </div>
        <div class="card-body">
          <table class="table table-bordered table-striped">
            <thead class="table-dark">
              <tr>
                <th>Level</th>
                <th>Total Bays</th>
                <th>Available Bays</th>
              </tr>
            </thead>
            <tbody>
              {% for level in garage.levels %}
                <tr>
                  <td>{{ level.level_name }}</td>
                  <td>{{ level.total_bays }}</td>
                  <td>{{ level.available_bays }}</td>
                </tr>
              {% endfor %}
            </tbody>
          </table>

          <canvas id="chart-{{ loop.index }}"></canvas>
        </div>
      </div>
    {% endfor %}
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const garageData = {{ data | tojson }};
      
      garageData.forEach((garage, idx) => {
        const ctx = document.getElementById(`chart-${idx + 1}`).getContext('2d');
        const labels = garage.levels.map(l => l.level_name);
        const totalBays = garage.levels.map(l => l.total_bays);
        const availableBays = garage.levels.map(l => l.available_bays);

        new Chart(ctx, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [
              {
                label: 'Total Bays',
                data: totalBays,
                backgroundColor: 'rgba(54, 162, 235, 0.6)'
              },
              {
                label: 'Available Bays',
                data: availableBays,
                backgroundColor: 'rgba(75, 192, 192, 0.6)'
              }
            ]
          },
          options: {
            responsive: true,
            scales: {
              y: {
                beginAtZero: true,
                precision: 0
              }
            }
          }
        });
      });
    });
  </script>
</body>
</html>
